一、安装
1、Local Installation and Usage

npm install eslint --save-dev   or   yarn add eslint --dev

./node_modules/.bin/eslint --init //配置文件初始化

./node_modules/.bin/eslint yourfile.js  or  yarn eslint yourfile.js //检测自己的js

react jsx检测需要安装 eslint-plugin-react

结合webpack 安装 eslint-loader

  {
    test: /\.jsx?$/,
    exclude: /(node_modules|bower_components)/,
    loader: 'eslint-loader',
  }

2、Global Installation and Usage

yarn global add eslint //全局安装

eslint --init

eslint yourfile.js

yarn global add eslint-plugin-react



二、.eslintrc.js配置说明：
具体参考：
http://eslint.cn/docs/user-guide/configuring

env 指定代码运行的环境。
parserOptions 指定 JavaScript 相关的选项。ecmaVersion 指定用哪个 ECMAScript 的版本，默认是 3 和 5。
rules 指定具体检查的规则。默认情况下，如果不设置检查的规则，ESLint 不会检查任何规则。
//参考
module.exports = {
    "env": {
        "browser": true,
        "commonjs": true,
        "es6": true //for new ES6 global variables
    },
    "extends": "eslint:recommended",
    "parserOptions": { //设置解析器选项
        "ecmaFeatures": { //使用的额外的语言特性
            "experimentalObjectRestSpread": true, //启用对实验性的 object rest/spread properties 的支持
            "jsx": true //启用 JSX
        },
        "sourceType": "module",//模块处理
        "ecmaVersion": 6 //For ES6 syntax
    },
    "plugins": [
        "react"
    ],
    "rules": {
        // "indent": [ //缩进
        //     "error",
        //     2
        // ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        //js中字符串的是单引号
        "quotes": [
            "error",
            "single"
        ],
        //是否检测分号
        "semi": [
            "error",
            "always"
        ],
        // React & JSX
        // Our transforms set this automatically dom属性检测
        // 'react/jsx-boolean-value': ['error', 'always'],
        'react/jsx-no-undef': 'error',
        // We don't care to do this
        // 'react/jsx-sort-prop-types': OFF,
        'react/jsx-space-before-closing': 'error',
        //排除检测React 因为代码可能没有引用他 正常检查会有语法错误
        'react/jsx-uses-react': 'error',
        // 'react/no-is-mounted': OFF,
        // This isn't useful in our test code
        'react/react-in-jsx-scope': 'error',
        'react/self-closing-comp': 'error',
        // We don't care to do this
        'react/jsx-wrap-multilines': ['error', { declaration: false, assignment: false }],
        //判断虚拟dom 有没有使用
        'react/jsx-uses-vars': [2]
    }
};

